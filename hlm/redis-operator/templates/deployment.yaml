apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
  name: "{{ .Release.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  strategy:
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ .Release.Name }}"
    spec:
      serviceAccountName: "{{ .Release.Name }}"
      containers:
        - name: "{{ .Release.Name }}"
          image: "{{ .Values.image.registry }}/{{ .Values.image.organization }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "IfNotPresent"
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "50Mi"
          # We need a liveness probe in order to give the redis-operator enough
          # time to install the CRD. Otherwhise we end up in a deadlock
          # situation with the flux controller automation when installing the
          # operator and the redis failover CRD. The endpoint checked here is
          # the health check endpoint of the injected istio sidecar because the
          # redis operator does not provide a health check endpoint itself.
          livenessProbe:
            httpGet:
              path: "/healthz/ready"
              port: 15021
            initialDelaySeconds: 60
            periodSeconds: 10
      restartPolicy: "Always"
